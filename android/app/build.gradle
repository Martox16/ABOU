plugins {
    id "com.android.application"
    id "kotlin-android"
    // El plugin de Flutter debe aplicarse después de los plugins de Android y Kotlin.
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

android {
    namespace = "com.example.mi_argentina" // Cambia este nombre si tu paquete tiene otro namespace
    compileSdk = flutter.compileSdkVersion // Esto usa la configuración de Flutter para el SDK de compilación.
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId = "com.example.mi_argentina" // Asegúrate de que coincida con el paquete en AndroidManifest.xml
        minSdkVersion = 23 // Ahora configuramos explícitamente minSdkVersion a 23
        targetSdkVersion = flutter.targetSdkVersion // Esto usa la configuración de Flutter para el SDK de destino
        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
    }

    buildTypes {
        release {
            // Configuración de firma para la versión release
            signingConfig = signingConfigs.debug
        }
    }
}

flutter {
    source = "../.." // Asegúrate de que la ruta esté correcta
}
